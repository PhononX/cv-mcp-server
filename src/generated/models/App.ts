/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Carbon Voice Simplified API
 * # Introduction

The simplified version of the Carbon Voice API is designed to enhance usability for third-party clients looking to 
seamlessly integrate with our application. By streamlining authentication methods, providing clear error handling guidelines, 
and implementing straightforward rate limiting policies, we ensure that developers can quickly and efficiently connect to our services. 
This user-friendly approach minimizes complexity, making it easier for external applications to leverage the powerful communication 
features of Carbon Voice without extensive technical overhead.

This API is designed for people who feel comfortable integrating with RESTful APIs.

## Full API Version
We also have a full version of the API. You can find it [here](/docs).

## Terminology
 
* **Workspace**: An area that groups together people and Conversations.
* **Conversation**: A channel of communication. A grouping of people and messages related to a given topic.
* **Collaborators**: A group of people who are part of a Conversation.
* **Discussion**: Any post into a conversation
* **CarbonLink**: A link (on a website, QR code, or phone call) to start a conversation.

## BaseURL

This API is served over HTTPS.

All URLs referenced in the documentation have the following base: https://api.carbonvoice.app/api/simplified.

## Authentication

There are three ways to authenticate with this API:

* with an OAuth2 Access Token in the Authorization request header field 
(which uses the Bearer authentication scheme to transmit the Access Token)
* with your Client ID and Client Secret credentials
* with a PXToken

Each endpoint supports only one option.

<SecurityDefinitions />

## Errors

When an error occurs, you will receive an error object. Most of these error objects 
contain an error code and an error description so that your applications can more 
efficiently identify the problem.

If you get an 4xx HTTP response code, then you can assume that there is a bad request
from your end. In this case, check the [Error Responses section](#section/Introduction/Error-Responses) for more context.

5xx errors suggest a problem on our end, so in this case, check [Carbon Voice's Status](https://status.carbonvoice.app)
 to see how our systems are doing.

In any other case you can use our support options.

## Error Responses

`{ "success": false, requestId: "uuid", errmsg: "error message"`

## Rate-Limiting 

This API is subject to rate limiting. The limits differ per endpoint.

If you exceed the provided rate limit for a given endpoint, you will receive the 429
Too Many Requests response with the following message: Too many requests. Check the
X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.

For details on rate limiting, refer to Rate Limit Policy.

## Support

If you have problems or need help with your case, you can always reach out to our Support.

 * OpenAPI spec version: 1.0.0
 */
import type { AppWebhooksAuthenticationHeader } from './AppWebhooksAuthenticationHeader';
import type { AppWebhooksUrlMode } from './AppWebhooksUrlMode';

export interface App {
  /** The primary key of the resource. */
  id: string;
  name: string;
  description?: string;
  client_id: string;
  client_secret?: string;
  /** Access token lifetime in seconds */
  access_token_lifetime_seconds?: number;
  /** Refresh token lifetime in seconds */
  refresh_token_lifetime_seconds?: number;
  /** Allowed callback URLs (comma separated list) */
  allowed_callback_urls?: string;
  /** Webhook URL to send the data (comma separated list) */
  webhooks_url?: string;
  /** Authentication header configuration for webhooks. Key-value pairs where both key and value are strings. */
  webhooks_authentication_header?: AppWebhooksAuthenticationHeader;
  /** Allowed logout URLs (comma separated list) */
  allowed_logout_urls?: string;
  /** Created at */
  created_at: string;
  /** Updated at */
  updated_at: string;
  /** Deleted at */
  deleted_at?: string;
  /** Webhook URL mode */
  webhooks_url_mode: AppWebhooksUrlMode;
  /** Send invalid refresh token webhook notification */
  send_invalid_refresh_token_webhook_notification?: boolean;
  /** Send webhook when invalid access or refresh token */
  send_webhook_when_invalid_access_or_refresh_token?: boolean;
  owner_id?: string;
  /** Indicates whether the user is subscribed to the app and has valid authentication tokens (access or refresh). */
  user_is_subscribed_with_valid_tokens: boolean;
  /** Image URL */
  image_url?: string;
}
